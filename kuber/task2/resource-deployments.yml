apiVersion: v1
kind: Service
metadata:
  name: resource-service
  namespace: k8s-program
spec:
  selector:
    app: resource-service
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resource-service-deployment
  namespace: k8s-program
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resource-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: resource-service
    spec:
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: resource-service-pvc
      containers:
        - name: resource-service
          envFrom:
            - configMapRef:
                name: app-config
          image: 127.0.0.1:5000/local/resource_service:latest
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /resources/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 20
          livenessProbe:
            httpGet:
              path: /resources/health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 30
          volumeMounts:
            - mountPath: "/mnt/data"
              name: data-volume
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: SPRING_DATASOURCE_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
            - name: song.service.url
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: song.service.url