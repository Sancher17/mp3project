apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.resourceService.name }}
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Values.resourceService.name }}
  ports:
    - protocol: TCP
      port:  {{ .Values.resourceService.port }}
      targetPort:  {{ .Values.resourceService.port }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.resourceService.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.resourceService.name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ .Values.resourceService.name }}
    spec:
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: resource-service-pvc
      containers:
        - name: {{ .Values.resourceService.name }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configMap }}
          image: "{{ .Values.resourceService.image.repository }}:{{ .Values.resourceService.image.tag }}"
          ports:
            - containerPort: {{ .Values.resourceService.port }}
          readinessProbe:
            httpGet:
              path: /resources/health
              port: {{ .Values.resourceService.port }}
            initialDelaySeconds: 10
            periodSeconds: 20
          livenessProbe:
            httpGet:
              path: /resources/health
              port: {{ .Values.resourceService.port }}
            initialDelaySeconds: 15
            periodSeconds: 30
          volumeMounts:
            - mountPath: "/mnt/data"
              name: data-volume
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap }}
                  key: SPRING_DATASOURCE_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
            - name: song.service.url
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap }}
                  key: song.service.url
