apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.dbService.name }}
  namespace:  {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.dbService.name }}
  ports:
    - protocol: TCP
      port: {{ .Values.dbService.port }}
      targetPort: {{ .Values.dbService.port }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.dbService.name }}
  namespace: {{ .Values.namespace }}
spec:
  serviceName: {{ .Values.dbService.name }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.dbService.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.dbService.name }}
    spec:
      containers:
        - name: {{ .Values.dbService.name }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configMap }}
          image: {{ .Values.dbService.image.repository }}:{{ .Values.dbService.image.tag }}
          ports:
            - containerPort: {{ .Values.dbService.port }}
          env:
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
          volumeMounts:
            - name: init-scripts-volume
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
      volumes:
        - name: init-scripts-volume
          configMap:
            name: {{ .Values.configMap }}
